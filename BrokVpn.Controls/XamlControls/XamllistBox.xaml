<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:brokHelper="https://github.com/MasterBrok/BrokHelperControls"
    xmlns:local="clr-namespace:BrokVpn.Controls.BaseControls.ListBoxItems"
    xmlns:local1="clr-namespace:BrokVpn.Controls.BaseControls.ListBoxs"
    xmlns:models="clr-namespace:BrokVpn.Vpn.Models;assembly=BrokVpn.Vpn">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/BrokVpn.Controls;component/Resources/Colors/PaletteColors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/BrokVpn.Controls;component/Resources/Fonts/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/BrokVpn.Controls;component/Animations/ControlAnimations.xaml" />
        <ResourceDictionary Source="pack://application:,,,/BrokVpn.Controls;component/Resources/Icons/Icons.xaml" />

    </ResourceDictionary.MergedDictionaries>



    <ControlTemplate x:Key="TemplateListBox" TargetType="{x:Type local1:ccCountries}">
        <Border
            x:Name="Border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="10">
            <brokHelper:ccScrollViewerCornerRadius
                DirectionScrollViewer="Right"
                HorizontalScrollBarVisibility="Disabled"
                VerticalScrollBarVisibility="Visible">
                <brokHelper:ccScrollViewerCornerRadius.ScrollBarStyle>
                    <Style TargetType="{x:Type brokHelper:ccScrollBarCornerRadius}">
                        <Setter Property="CornerRadius" Value="10" />
                        <Setter Property="Opacity" Value="0.5" />
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="Background" Value="{DynamicResource bgBorderInIn}" />
                    </Style>
                </brokHelper:ccScrollViewerCornerRadius.ScrollBarStyle>
                <brokHelper:ccScrollViewerCornerRadius.ThumbStyle>
                    <Style TargetType="{x:Type brokHelper:ccThumbCornerRadius}">
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="CornerRadius" Value="1" />
                        <Setter Property="Background" Value="{DynamicResource stActiveIcon}" />
                        <Setter Property="Width" Value="5" />
                    </Style>
                </brokHelper:ccScrollViewerCornerRadius.ThumbStyle>
                <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
            </brokHelper:ccScrollViewerCornerRadius>
        </Border>
    </ControlTemplate>


    <BooleanToVisibilityConverter x:Key="BoolToVisibel" />
    <ControlTemplate x:Key="TemplateCountry" TargetType="{x:Type local:ccCountry}">

        <Border
            x:Name="BorderMain"
            Background="{TemplateBinding Background}"
            CornerRadius="10"
            DataContext="{TemplateBinding DataContext}"
            IsEnabled="{TemplateBinding IsEnabled}"
            Tag="{TemplateBinding Tag}">
            <Grid x:Name="GrdPath">
                <Path
                    x:Name="Right"
                    HorizontalAlignment="Left"
                    Data="{DynamicResource LeftButton}"
                    Fill="{DynamicResource bgBorderInIn}"
                    Stretch="Uniform"
                    Stroke="Transparent"
                    StrokeDashArray="34"
                    StrokeDashOffset="500"
                    StrokeThickness="1" />
                <Path
                    x:Name="Left"
                    HorizontalAlignment="Right"
                    Data="{DynamicResource RightButton}"
                    Fill="{DynamicResource bgBorderInIn}"
                    Stretch="Uniform"
                    StrokeDashArray="34"
                    StrokeDashOffset="500"
                    StrokeThickness="1" />

                <StackPanel
                    x:Name="spMain"
                    Background="Transparent"
                    Orientation="Horizontal">

                    <StackPanel Margin="5" VerticalAlignment="Center">
                        <Grid>
                            <Border
                                x:Name="brdIcon"
                                Width="25"
                                Height="25"
                                Margin="5"
                                HorizontalAlignment="Center"
                                CornerRadius="5"
                                Opacity="0.5">
                                <Border.Effect>
                                    <BlurEffect
                                        KernelType="Gaussian"
                                        Radius="15"
                                        RenderingBias="Quality" />
                                </Border.Effect>
                            </Border>
                            <Path
                                x:Name="WorldIcon"
                                Width="25"
                                Height="25"
                                Data="{StaticResource World}"
                                Stretch="Uniform"
                                Stroke="Black"
                                StrokeDashArray="10"
                                StrokeDashOffset="500"
                                StrokeThickness="1" />
                        </Grid>

                    </StackPanel>
                    <StackPanel VerticalAlignment="Center" Orientation="Vertical">
                        <TextBlock
                            HorizontalAlignment="Center"
                            FontSize="10"
                            FontWeight="Regular"
                            Foreground="White"
                            Text="{Binding Continent}" />
                        <TextBlock
                            HorizontalAlignment="Center"
                            FontSize="5"
                            Foreground="{Binding ElementName=brdIcon, Path=Background, Mode=TwoWay}"
                            Text="{Binding Ping}" />

                    </StackPanel>
                </StackPanel>

                <Grid HorizontalAlignment="Right" VerticalAlignment="Top">
                    <Ellipse
                        x:Name="el"
                        Width="20"
                        Height="20"
                        Margin="-2"
                        Fill="White"
                        Opacity="0.4" />
                    <Path
                        x:Name="LockIcon"
                        Width="10"
                        Height="10"
                        Data="{StaticResource Lock}"
                        Stretch="Uniform"
                        Stroke="{DynamicResource bgUnActiveButton}"
                        StrokeThickness="1"
                        Visibility="Hidden" />

                </Grid>
                <Rectangle
                    x:Name="rectValue"
                    Width="30"
                    Height="1"
                    Margin="2"
                    VerticalAlignment="Bottom"
                    RadiusX="5"
                    RadiusY="5" />
            </Grid>

        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="Uid" Value="false">
                <Setter Property="IsEnabled" Value="false" />
                <Setter TargetName="el" Property="Fill" Value="Black" />
                <Setter TargetName="LockIcon" Property="Visibility" Value="Visible" />
                <Setter TargetName="rectValue" Property="Fill" Value="Black" />
                <Setter TargetName="brdIcon" Property="Background" Value="black" />
                <Setter TargetName="Left" Property="Stroke" Value="black" />
                <Setter TargetName="Right" Property="Stroke" Value="black" />

                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="isSelect3" Storyboard="{StaticResource IsSelectListBoxItem}" />
                    <BeginStoryboard x:Name="isSelect4" Storyboard="{StaticResource IsSelectListBoxItemIcon}" />
                </Trigger.EnterActions>
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="brdIcon" Property="Background" Value="{Binding SelectColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <Setter TargetName="Left" Property="Stroke" Value="{Binding ElementName=brdIcon, Path=Background}" />
                <Setter TargetName="Right" Property="Stroke" Value="{Binding ElementName=brdIcon, Path=Background}" />
                <Setter TargetName="rectValue" Property="Fill" Value="Orange" />
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="isSelect1" Storyboard="{StaticResource IsSelectListBoxItem}" />
                    <BeginStoryboard x:Name="isSelect2" Storyboard="{StaticResource IsSelectListBoxItemIcon}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="isSelect2" />
                    <RemoveStoryboard BeginStoryboardName="isSelect1" />
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Left" Property="Stroke" Value="#FFFFFF" />
                <Setter TargetName="Right" Property="Stroke" Value="#FFFFFF" />
                <Setter TargetName="rectValue" Property="Fill" Value="Orange" />
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="bs" Storyboard="{StaticResource IsSelectListBoxItem}" />
                    <BeginStoryboard x:Name="bsIcon" Storyboard="{StaticResource IsSelectListBoxItemIcon}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="bs" />
                    <RemoveStoryboard BeginStoryboardName="bsIcon" />
                </Trigger.ExitActions>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>




</ResourceDictionary>